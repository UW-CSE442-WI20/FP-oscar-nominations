{"version":3,"sources":["top10-bar.js"],"names":["margin","top","right","bottom","left","width","height","svg","d3","select","append","attr","csv","data","console","log","x","scaleLinear","domain","range","call","axisBottom","histogram","value","d","averageRating","thresholds","ticks","bins","y","max","length","axisLeft","selectAll","enter","x0","style"],"mappings":"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","file":"top10-bar.dc785559.js","sourceRoot":"../src","sourcesContent":["// set the dimensions and margins of the graph\r\nvar margin = {top: 10, right: 30, bottom: 30, left: 40},\r\n    width = 460 - margin.left - margin.right,\r\n    height = 400 - margin.top - margin.bottom;\r\n\r\n// append the svg object to the body of the page\r\nvar svg = d3.select(\"#top10\")\r\n  .append(\"svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n  .append(\"g\")\r\n    .attr(\"transform\",\r\n          \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n// get the data\r\nd3.csv(\"test.csv\", function(data) {\r\n  console.log(data);\r\n  // X axis: scale and draw:\r\n  var x = d3.scaleLinear()\r\n      .domain([0, 10])     // can use this instead of 1000 to have the max of data: d3.max(data, function(d) { return +d.price })\r\n      .range([0, width]);\r\n  svg.append(\"g\")\r\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n      .call(d3.axisBottom(x));\r\n\r\n  // set the parameters for the histogram\r\n  var histogram = d3.histogram()\r\n      .value(function(d) { return d.averageRating*100; })   // I need to give the vector of value\r\n      .domain(x.domain())  // then the domain of the graphic\r\n      .thresholds(x.ticks(70)); // then the numbers of bins\r\n  // And apply this function to data to get the bins\r\n  var bins = histogram(data);\r\n\r\n  // Y axis: scale and draw:\r\n  var y = d3.scaleLinear()\r\n      .range([height, 0]);\r\n      y.domain([0, d3.max(bins, function(d) { return d.length; })]);   // d3.hist has to be called before the Y axis obviously\r\n  svg.append(\"g\")\r\n      .call(d3.axisLeft(y));\r\n\r\n  // append the bar rectangles to the svg element\r\n  svg.selectAll(\"rect\")\r\n      .data(bins)\r\n      .enter()\r\n      .append(\"rect\")\r\n        .attr(\"x\", 1)\r\n        .attr(\"transform\", function(d) { return \"translate(\" + x(d.x0) + \",\" + y(d.length) + \")\"; })\r\n        .attr(\"width\", function(d) { return 200; })\r\n        .attr(\"height\", function(d) { return height - y(d.length); })\r\n        .style(\"fill\", \"#69b3a2\")\r\n});\r\n"]}