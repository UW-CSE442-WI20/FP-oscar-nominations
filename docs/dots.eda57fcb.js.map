{"version":3,"sources":["dots.js"],"names":["width","height","svg","d3","select","append","attr","dfe","require","csv","data","x","scaleOrdinal","domain","range","color","console","log","node","selectAll","enter","style","d","race_ethnicity","call","drag","on","dragstarted","dragged","dragended","simulation","forceSimulation","force","forceX","strength","forceY","y","forceCenter","forceManyBody","forceCollide","radius","iterations","nodes","event","active","alphaTarget","restart","fx","fy"],"mappings":"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","file":"dots.eda57fcb.js","sourceRoot":"../src","sourcesContent":["// set the dimensions and margins of the graph\r\nvar width = 1000\r\nvar height = 550\r\n\r\n// append the svg object to the body of the page\r\nvar svg = d3.select(\"#best_dots\")\r\n  .append(\"svg\")\r\n    .attr(\"width\", 77+'%')\r\n    .attr(\"height\", 550)\r\n// create dummy data -> just one element per circle\r\n\r\n\r\nconst dfe = require('./oscar_demos_def.csv')\r\nd3.csv(dfe, function(data) {\r\n    // A scale that gives a X target position for each group\r\n    var x = d3.scaleOrdinal()\r\n      .domain(['White', 'Black', 'Asian', 'Hispanic', 'Middle Eastern', 'Multiracial'])\r\n      .range([150, 300, 450, 600, 750, 900 ])\r\n\r\n    // A color scale\r\n    var color = d3.scaleOrdinal()\r\n      .domain(['White', 'Black', 'Asian', 'Hispanic', 'Middle Eastern', 'Multiracial'])\r\n      .range([ \"#FFFFFF\", \"#00BA38\", \"#619CFF\", \"#d712a3\", \"#e0cb3f\", \"#9d34c8\"])\r\n    console.log(data)\r\n\r\n    // Initialize the circle: all located at the center of the svg area\r\n    var node = svg.append(\"g\")\r\n      .selectAll(\"circle\")\r\n      .data(data)\r\n      .enter()\r\n      .append(\"circle\")\r\n        .attr(\"r\", 5)\r\n        .attr(\"cx\", width / 3)\r\n        .attr(\"cy\", height / 3)\r\n        .style(\"fill\", function(d){ return color(d.race_ethnicity)})\r\n        .style(\"fill-opacity\", 0.8)\r\n        .attr(\"stroke\", \"#D8A75E\")\r\n        .style(\"stroke-width\", 1)\r\n        .call(d3.drag() // call specific function when circle is dragged\r\n             .on(\"start\", dragstarted)\r\n             .on(\"drag\", dragged)\r\n             .on(\"end\", dragended));\r\n\r\n    // Features of the forces applied to the nodes:\r\n    var simulation = d3.forceSimulation()\r\n        .force(\"x\", d3.forceX().strength(0.2).x( function(d){ return x(d.race_ethnicity) } ))\r\n        .force(\"y\", d3.forceY().strength(0.1).y( height/2 ))\r\n        .force(\"center\", d3.forceCenter().x(width / 3).y(height / 3)) // Attraction to the center of the svg area\r\n        .force(\"charge\", d3.forceManyBody().strength(1)) // Nodes are attracted one each other of value is > 0\r\n        .force(\"collide\", d3.forceCollide().strength(.1).radius(10).iterations(1)) // Force that avoids circle overlapping\r\n\r\n    // Apply these forces to the nodes and update their positions.\r\n    // Once the force algorithm is happy with positions ('alpha' value is low enough), simulations will stop.\r\n    simulation\r\n        .nodes(data)\r\n        .on(\"tick\", function(d){\r\n          node\r\n              .attr(\"cx\", function(d){ return d.x; })\r\n              .attr(\"cy\", function(d){ return d.y; })\r\n        });\r\n\r\n    // What happens when a circle is dragged?\r\n    function dragstarted(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(.03).restart();\r\n      d.fx = d.x;\r\n      d.fy = d.y;\r\n    }\r\n    function dragged(d) {\r\n      d.fx = d3.event.x;\r\n      d.fy = d3.event.y;\r\n    }\r\n    function dragended(d) {\r\n      if (!d3.event.active) simulation.alphaTarget(.03);\r\n      d.fx = null;\r\n      d.fy = null;\r\n    }\r\n  })\r\n"]}